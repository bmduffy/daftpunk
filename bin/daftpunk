#! /usr/bin/env python2.7
from daftpunk.daft import DaftProperty
from daftpunk import *
from redis import StrictRedis
from sys import argv
from argparse import ArgumentParser, RawTextHelpFormatter

class Daftpunk(object):
    __metaclass__ = DaftMeta
    DESCRIPTION = 'Property Analytics Tool'
    EPILOG = 'Author: Nic Roland\nEmail: nicroland9@gmail.com\nTwitter: @nicr9_'

    def __init__(self, backend, args):
        self.backend = backend
        self.config = self.parse_args(args)

    def parse_args(self, argv):
        """For parsing CLI arguements."""
        parser = ArgumentParser(
                formatter_class=RawTextHelpFormatter,
                description=self.DESCRIPTION,
                epilog=self.EPILOG
                )

        parser.add_argument(
                'command',
                default=None,
                nargs='?',
                type=str,
                help='For a list of commands, see docs.'
                )

        parser.add_argument(
                'args',
                default=[],
                nargs='*',
                type=str,
                help='Any arguments the command needs.'
                )

        return parser.parse_args(argv[1:])

    @daftcommand
    def add(self, url):
        prop = DaftProperty.from_url(url)
        prop.export(self.backend)

    @daftcommand
    def geocode(self):
        prop_ids = self.backend.smembers(PROPERTIES)
        props = [DaftProperty.from_redis(self.backend, prop_id) for prop_id
                in prop_ids]

        from time import sleep
        for prop in props:
            prop.run_geocode(True)
            prop.export(r)
            sleep(0.2)

if __name__ == "__main__":
    r = StrictRedis(**REDIS_CONFIG)
    dp = Daftpunk(r, argv)
    dp.run()
